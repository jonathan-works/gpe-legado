<?xml version="1.0" encoding="UTF-8"?>
<ui:composition
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:s="http://jboss.org/schema/seam/taglib"
  xmlns:a="http://richfaces.org/a4j"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:rich="http://richfaces.ajax4jsf.org/rich"
  xmlns:f="http://java.sun.com/jsf/core"
>
  <!-- 
    	Propriedades que podem ser passadas como atributo
    	- id			: Representa o id global do componente, ideal que não seja duplicado
    	- angle			: Ângulo de abertura do medidor. Ideal que seja menor que 350 e maior que 0
    	- radius		: Raio do medidor, medido do seu centro até a borda interna dos marcadores
    	- min			: Valor mínimo representado pelo medidor
    	- max			: Valor máximo representado pelo medidor
    	- value			: Valor representado pela agulha do medidor
	   	- hideValues	: Boolean que determina se existirá marcação numérica ao redor do medidor
    	- tickInterval	: Intervalo entre números da marcação numérica ao redor do medidor
    	- width			: Largura da caixa que irá conter o medidor
    	- height		: Altura da caixa que irá conter o medidor
    	- draggable		: Boolean que determina se o medidor pode ser movido pela tela dentro de seus limites
    	- indicatorLabel: String que irá aparecer antecedendo o valor representado pela agulha
     -->
  <ui:param
    name="id"
    value="#{wi:get(id, 'default')}"
  />
  <ui:param
    name="value"
    value="#{wi:get(value,0)}"
  />
  <h:outputScript>
    invoke(["infox.DefaultGauge"],function(DefaultGauge) {
      DefaultGauge({
        id:"#{id}DefaultGauge",
        containerId:"#{id}DefaultGaugeContainer",
        angle:#{wi:get(angle,300)},
        radius:#{wi:get(radius,150)},
        min:#{wi:get(min,0)},
        max:#{wi:get(max,100)},
        value:#{value},
        hideValues:#{wi:get(hideValues,false)},
        tickInterval:#{wi:get(tickInterval, max/4)},
        width:#{wi:get(width, radius*4)},
        height:#{wi:get(height, radius*4)},
        draggable:#{wi:get(draggable, false)},
        baseUrl:"#{pathResolver.getContextPath()}/resources/js/dojo/",
        colors:{
          background:'#FFF',
          core:{
            inner:'#A0A0A0',
            outer:'#404040'
          },
          indicators:{
            over75:'#BA1F1F',
            over25:'#E8ED1B',
            base:'#13C600',
            needle:'#000000'
          },
          ticks:'#000000'
        }
      });
    });
  </h:outputScript>
  <div
    id="#{id}DefaultGaugeContainer"
    class="gaugeContainer #{wi:get(containerStyleClass,'')}"
  >
    <div
      id="#{id}DefaultGaugeHeader"
      class="rf-p-h"
    >#{label}</div>
    <div
      id="#{id}DefaultGauge"
      class="gauge"
    ></div>
    <s:div id="gaugeAjaxDiv#{id}">
      <span>#{wi:get(indicatorLabel, '')}: #{value}</span>
      <h:outputScript>
        invoke(["infox.DefaultGauge.instance.#{id}DefaultGauge"],function(Gauge) {
          try {
            Gauge.updateValue(#{value});
          } catch(e) {}	        		
        });
      </h:outputScript>
    </s:div>
  </div>
</ui:composition>