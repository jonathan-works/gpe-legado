<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.2.xsd">
    
    <changeSet author="gabriel" id="1" dbms="mssql, postgresql, oracle" >
        <sql dbms="mssql" >
            drop table qrtz_job_listeners;
            drop table qrtz_trigger_listeners;
            drop table qrtz_fired_triggers;
            DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
            DROP TABLE QRTZ_SCHEDULER_STATE;
            DROP TABLE QRTZ_LOCKS;
            drop table qrtz_simple_triggers;
            drop table qrtz_cron_triggers;
            DROP TABLE QRTZ_BLOB_TRIGGERS;
            drop table qrtz_triggers;
            drop table qrtz_job_details;
            drop table qrtz_calendars;
            DELETE FROM tb_parametro WHERE nm_variavel LIKE 'id%Timer%';
        </sql>

        <sql dbms="oracle" >
            drop table qrtz_job_listeners;
            drop table qrtz_trigger_listeners;
            drop table qrtz_fired_triggers;
            DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
            DROP TABLE QRTZ_SCHEDULER_STATE;
            DROP TABLE QRTZ_LOCKS;
            drop table qrtz_simple_triggers;
            drop table qrtz_cron_triggers;
            DROP TABLE QRTZ_BLOB_TRIGGERS;
            drop table qrtz_triggers;
            drop table qrtz_job_details;
            drop table qrtz_calendars;
            DELETE FROM tb_parametro WHERE nm_variavel LIKE 'id%Timer%';
        </sql>
        
        <sql dbms="postgresql" >
            drop table qrtz_job_listeners CASCADE;
            drop table qrtz_trigger_listeners CASCADE;
            drop table qrtz_fired_triggers CASCADE;
            DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS CASCADE;
            DROP TABLE QRTZ_SCHEDULER_STATE CASCADE;
            DROP TABLE QRTZ_LOCKS CASCADE;
            drop table qrtz_simple_triggers CASCADE;
            drop table qrtz_cron_triggers CASCADE;
            DROP TABLE QRTZ_BLOB_TRIGGERS CASCADE;
            drop table qrtz_triggers CASCADE;
            drop table qrtz_job_details CASCADE;
            drop table qrtz_calendars CASCADE;
            DELETE FROM tb_parametro WHERE nm_variavel LIKE 'id%Timer%';
        </sql>

        <sql dbms="mssql" endDelimiter="\nGO">
        <![CDATA[
            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
            ALTER TABLE [dbo].[QRTZ_TRIGGERS] DROP CONSTRAINT FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS;

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
            ALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] DROP CONSTRAINT FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS;

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
            ALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] DROP CONSTRAINT FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS;

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
            ALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] DROP CONSTRAINT FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS;

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_CALENDARS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_CALENDARS];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_CRON_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_CRON_TRIGGERS];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_BLOB_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_BLOB_TRIGGERS];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_FIRED_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_FIRED_TRIGGERS];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_PAUSED_TRIGGER_GRPS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_SCHEDULER_STATE]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_SCHEDULER_STATE];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_LOCKS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_LOCKS];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_JOB_DETAILS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_JOB_DETAILS];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_SIMPLE_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_SIMPROP_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS];

            IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[QRTZ_TRIGGERS]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
            DROP TABLE [dbo].[QRTZ_TRIGGERS];

            CREATE TABLE [dbo].[QRTZ_CALENDARS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [CALENDAR_NAME] [VARCHAR] (200)  NOT NULL ,
              [CALENDAR] [IMAGE] NOT NULL
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_CRON_TRIGGERS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,
              [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,
              [CRON_EXPRESSION] [VARCHAR] (120)  NOT NULL ,
              [TIME_ZONE_ID] [VARCHAR] (80) 
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_FIRED_TRIGGERS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [ENTRY_ID] [VARCHAR] (95)  NOT NULL ,
              [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,
              [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,
              [INSTANCE_NAME] [VARCHAR] (200)  NOT NULL ,
              [FIRED_TIME] [BIGINT] NOT NULL ,
              [SCHED_TIME] [BIGINT] NOT NULL ,
              [PRIORITY] [INTEGER] NOT NULL ,
              [STATE] [VARCHAR] (16)  NOT NULL,
              [JOB_NAME] [VARCHAR] (200)  NULL ,
              [JOB_GROUP] [VARCHAR] (200)  NULL ,
              [IS_NONCONCURRENT] [VARCHAR] (1)  NULL ,
              [REQUESTS_RECOVERY] [VARCHAR] (1)  NULL 
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL 
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_SCHEDULER_STATE] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [INSTANCE_NAME] [VARCHAR] (200)  NOT NULL ,
              [LAST_CHECKIN_TIME] [BIGINT] NOT NULL ,
              [CHECKIN_INTERVAL] [BIGINT] NOT NULL
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_LOCKS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [LOCK_NAME] [VARCHAR] (40)  NOT NULL 
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_JOB_DETAILS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [JOB_NAME] [VARCHAR] (200)  NOT NULL ,
              [JOB_GROUP] [VARCHAR] (200)  NOT NULL ,
              [DESCRIPTION] [VARCHAR] (250) NULL ,
              [JOB_CLASS_NAME] [VARCHAR] (250)  NOT NULL ,
              [IS_DURABLE] [VARCHAR] (1)  NOT NULL ,
              [IS_NONCONCURRENT] [VARCHAR] (1)  NOT NULL ,
              [IS_UPDATE_DATA] [VARCHAR] (1)  NOT NULL ,
              [REQUESTS_RECOVERY] [VARCHAR] (1)  NOT NULL ,
              [JOB_DATA] [IMAGE] NULL
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,
              [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,
              [REPEAT_COUNT] [BIGINT] NOT NULL ,
              [REPEAT_INTERVAL] [BIGINT] NOT NULL ,
              [TIMES_TRIGGERED] [BIGINT] NOT NULL
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,
              [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,
              [STR_PROP_1] [VARCHAR] (512) NULL,
              [STR_PROP_2] [VARCHAR] (512) NULL,
              [STR_PROP_3] [VARCHAR] (512) NULL,
              [INT_PROP_1] [INT] NULL,
              [INT_PROP_2] [INT] NULL,
              [LONG_PROP_1] [BIGINT] NULL,
              [LONG_PROP_2] [BIGINT] NULL,
              [DEC_PROP_1] [NUMERIC] (13,4) NULL,
              [DEC_PROP_2] [NUMERIC] (13,4) NULL,
              [BOOL_PROP_1] [VARCHAR] (1) NULL,
              [BOOL_PROP_2] [VARCHAR] (1) NULL,
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_BLOB_TRIGGERS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,
              [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,
              [BLOB_DATA] [IMAGE] NULL
            ) ON [PRIMARY];

            CREATE TABLE [dbo].[QRTZ_TRIGGERS] (
              [SCHED_NAME] [VARCHAR] (120)  NOT NULL ,
              [TRIGGER_NAME] [VARCHAR] (200)  NOT NULL ,
              [TRIGGER_GROUP] [VARCHAR] (200)  NOT NULL ,
              [JOB_NAME] [VARCHAR] (200)  NOT NULL ,
              [JOB_GROUP] [VARCHAR] (200)  NOT NULL ,
              [DESCRIPTION] [VARCHAR] (250) NULL ,
              [NEXT_FIRE_TIME] [BIGINT] NULL ,
              [PREV_FIRE_TIME] [BIGINT] NULL ,
              [PRIORITY] [INTEGER] NULL ,
              [TRIGGER_STATE] [VARCHAR] (16)  NOT NULL ,
              [TRIGGER_TYPE] [VARCHAR] (8)  NOT NULL ,
              [START_TIME] [BIGINT] NOT NULL ,
              [END_TIME] [BIGINT] NULL ,
              [CALENDAR_NAME] [VARCHAR] (200)  NULL ,
              [MISFIRE_INSTR] [SMALLINT] NULL ,
              [JOB_DATA] [IMAGE] NULL
            ) ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_CALENDARS] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_CALENDARS] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [CALENDAR_NAME]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_CRON_TRIGGERS] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_FIRED_TRIGGERS] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_FIRED_TRIGGERS] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [ENTRY_ID]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_PAUSED_TRIGGER_GRPS] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_PAUSED_TRIGGER_GRPS] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [TRIGGER_GROUP]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_SCHEDULER_STATE] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_SCHEDULER_STATE] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [INSTANCE_NAME]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_LOCKS] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_LOCKS] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [LOCK_NAME]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_JOB_DETAILS] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_JOB_DETAILS] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [JOB_NAME],
                [JOB_GROUP]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_SIMPLE_TRIGGERS] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_SIMPROP_TRIGGERS] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_TRIGGERS] WITH NOCHECK ADD
              CONSTRAINT [PK_QRTZ_TRIGGERS] PRIMARY KEY  CLUSTERED
              (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              )  ON [PRIMARY];

            ALTER TABLE [dbo].[QRTZ_CRON_TRIGGERS] ADD
              CONSTRAINT [FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY
              (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              ) REFERENCES [dbo].[QRTZ_TRIGGERS] (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              ) ON DELETE CASCADE;

            ALTER TABLE [dbo].[QRTZ_SIMPLE_TRIGGERS] ADD
              CONSTRAINT [FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY
              (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              ) REFERENCES [dbo].[QRTZ_TRIGGERS] (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              ) ON DELETE CASCADE;

            ALTER TABLE [dbo].[QRTZ_SIMPROP_TRIGGERS] ADD
              CONSTRAINT [FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS] FOREIGN KEY
              (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              ) REFERENCES [dbo].[QRTZ_TRIGGERS] (
                [SCHED_NAME],
                [TRIGGER_NAME],
                [TRIGGER_GROUP]
              ) ON DELETE CASCADE;

            ALTER TABLE [dbo].[QRTZ_TRIGGERS] ADD
              CONSTRAINT [FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS] FOREIGN KEY
              (
                [SCHED_NAME],
                [JOB_NAME],
                [JOB_GROUP]
              ) REFERENCES [dbo].[QRTZ_JOB_DETAILS] (
                [SCHED_NAME],
                [JOB_NAME],
                [JOB_GROUP]
              );

        ]]>
        </sql>

        <sql dbms="postgresql" >
        <![CDATA[
            CREATE TABLE qrtz_job_details
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                JOB_NAME  VARCHAR(200) NOT NULL,
                JOB_GROUP VARCHAR(200) NOT NULL,
                DESCRIPTION VARCHAR(250) NULL,
                JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
                IS_DURABLE BOOL NOT NULL,
                IS_NONCONCURRENT BOOL NOT NULL,
                IS_UPDATE_DATA BOOL NOT NULL,
                REQUESTS_RECOVERY BOOL NOT NULL,
                JOB_DATA BYTEA NULL,
                PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
            );

            CREATE TABLE qrtz_triggers
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                TRIGGER_NAME VARCHAR(200) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                JOB_NAME  VARCHAR(200) NOT NULL, 
                JOB_GROUP VARCHAR(200) NOT NULL,
                DESCRIPTION VARCHAR(250) NULL,
                NEXT_FIRE_TIME BIGINT NULL,
                PREV_FIRE_TIME BIGINT NULL,
                PRIORITY INTEGER NULL,
                TRIGGER_STATE VARCHAR(16) NOT NULL,
                TRIGGER_TYPE VARCHAR(8) NOT NULL,
                START_TIME BIGINT NOT NULL,
                END_TIME BIGINT NULL,
                CALENDAR_NAME VARCHAR(200) NULL,
                MISFIRE_INSTR SMALLINT NULL,
                JOB_DATA BYTEA NULL,
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
                REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
            );

            CREATE TABLE qrtz_simple_triggers
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                TRIGGER_NAME VARCHAR(200) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                REPEAT_COUNT BIGINT NOT NULL,
                REPEAT_INTERVAL BIGINT NOT NULL,
                TIMES_TRIGGERED BIGINT NOT NULL,
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
                REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_cron_triggers
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                TRIGGER_NAME VARCHAR(200) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                CRON_EXPRESSION VARCHAR(120) NOT NULL,
                TIME_ZONE_ID VARCHAR(80),
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
                REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_simprop_triggers
              (          
                SCHED_NAME VARCHAR(120) NOT NULL,
                TRIGGER_NAME VARCHAR(200) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                STR_PROP_1 VARCHAR(512) NULL,
                STR_PROP_2 VARCHAR(512) NULL,
                STR_PROP_3 VARCHAR(512) NULL,
                INT_PROP_1 INT NULL,
                INT_PROP_2 INT NULL,
                LONG_PROP_1 BIGINT NULL,
                LONG_PROP_2 BIGINT NULL,
                DEC_PROP_1 NUMERIC(13,4) NULL,
                DEC_PROP_2 NUMERIC(13,4) NULL,
                BOOL_PROP_1 BOOL NULL,
                BOOL_PROP_2 BOOL NULL,
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
                REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_blob_triggers
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                TRIGGER_NAME VARCHAR(200) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                BLOB_DATA BYTEA NULL,
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
                    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_calendars
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                CALENDAR_NAME  VARCHAR(200) NOT NULL, 
                CALENDAR BYTEA NOT NULL,
                PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
            );


            CREATE TABLE qrtz_paused_trigger_grps
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
                PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_fired_triggers 
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                ENTRY_ID VARCHAR(95) NOT NULL,
                TRIGGER_NAME VARCHAR(200) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                INSTANCE_NAME VARCHAR(200) NOT NULL,
                FIRED_TIME BIGINT NOT NULL,
                SCHED_TIME BIGINT NOT NULL,
                PRIORITY INTEGER NOT NULL,
                STATE VARCHAR(16) NOT NULL,
                JOB_NAME VARCHAR(200) NULL,
                JOB_GROUP VARCHAR(200) NULL,
                IS_NONCONCURRENT BOOL NULL,
                REQUESTS_RECOVERY BOOL NULL,
                PRIMARY KEY (SCHED_NAME,ENTRY_ID)
            );

            CREATE TABLE qrtz_scheduler_state 
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                INSTANCE_NAME VARCHAR(200) NOT NULL,
                LAST_CHECKIN_TIME BIGINT NOT NULL,
                CHECKIN_INTERVAL BIGINT NOT NULL,
                PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
            );

            CREATE TABLE qrtz_locks
              (
                SCHED_NAME VARCHAR(120) NOT NULL,
                LOCK_NAME  VARCHAR(40) NOT NULL, 
                PRIMARY KEY (SCHED_NAME,LOCK_NAME)
            );

            create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
            create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);

            create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
            create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
            create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
            create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
            create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
            create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
            create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
            create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
            create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
            create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
            create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
            create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

            create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
            create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
            create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
            create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
            create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
            create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
        ]]>
        </sql>

        <sql dbms="oracle">
            CREATE TABLE qrtz_job_details
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                JOB_NAME  NVARCHAR2(200) NOT NULL,
                JOB_GROUP NVARCHAR2(200) NOT NULL,
                DESCRIPTION NVARCHAR2(250) NULL,
                JOB_CLASS_NAME   NVARCHAR2(250) NOT NULL, 
                IS_DURABLE NUMBER(1) NOT NULL,
                IS_NONCONCURRENT NUMBER(1) NOT NULL,
                IS_UPDATE_DATA NUMBER(1) NOT NULL,
                REQUESTS_RECOVERY NUMBER(1) NOT NULL,
                JOB_DATA BLOB NULL,
                PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
            );

            CREATE TABLE qrtz_triggers
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                TRIGGER_NAME NVARCHAR2(200) NOT NULL,
                TRIGGER_GROUP NVARCHAR2(200) NOT NULL,
                JOB_NAME  NVARCHAR2(200) NOT NULL, 
                JOB_GROUP NVARCHAR2(200) NOT NULL,
                DESCRIPTION NVARCHAR2(250) NULL,
                NEXT_FIRE_TIME NUMBER(38) NULL,
                PREV_FIRE_TIME NUMBER(38) NULL,
                PRIORITY NUMBER(10) NULL,
                TRIGGER_STATE NVARCHAR2(16) NOT NULL,
                TRIGGER_TYPE NVARCHAR2(8) NOT NULL,
                START_TIME NUMBER(38) NOT NULL,
                END_TIME NUMBER(38) NULL,
                CALENDAR_NAME NVARCHAR2(200) NULL,
                MISFIRE_INSTR NUMBER(5) NULL,
                JOB_DATA BLOB NULL,
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
                REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
            );

            CREATE TABLE qrtz_simple_triggers
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                TRIGGER_NAME NVARCHAR2(200) NOT NULL,
                TRIGGER_GROUP NVARCHAR2(200) NOT NULL,
                REPEAT_COUNT NUMBER(38) NOT NULL,
                REPEAT_INTERVAL NUMBER(38) NOT NULL,
                TIMES_TRIGGERED NUMBER(38) NOT NULL,
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
                REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_cron_triggers
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                TRIGGER_NAME NVARCHAR2(200) NOT NULL,
                TRIGGER_GROUP NVARCHAR2(200) NOT NULL,
                CRON_EXPRESSION NVARCHAR2(120) NOT NULL,
                TIME_ZONE_ID NVARCHAR2(80),
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
                REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_simprop_triggers
              (          
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                TRIGGER_NAME NVARCHAR2(200) NOT NULL,
                TRIGGER_GROUP NVARCHAR2(200) NOT NULL,
                STR_PROP_1 NVARCHAR2(512) NULL,
                STR_PROP_2 NVARCHAR2(512) NULL,
                STR_PROP_3 NVARCHAR2(512) NULL,
                INT_PROP_1 NUMBER(10) NULL,
                INT_PROP_2 NUMBER(10) NULL,
                LONG_PROP_1 NUMBER(38) NULL,
                LONG_PROP_2 NUMBER(38) NULL,
                DEC_PROP_1 NUMBER(13,4) NULL,
                DEC_PROP_2 NUMBER(13,4) NULL,
                BOOL_PROP_1 NUMBER(1) NULL,
                BOOL_PROP_2 NUMBER(1) NULL,
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
                REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_blob_triggers
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                TRIGGER_NAME NVARCHAR2(200) NOT NULL,
                TRIGGER_GROUP NVARCHAR2(200) NOT NULL,
                BLOB_DATA BLOB NULL,
                PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
                    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_calendars
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                CALENDAR_NAME  NVARCHAR2(200) NOT NULL, 
                CALENDAR BLOB NOT NULL,
                PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
            );


            CREATE TABLE qrtz_paused_trigger_grps
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                TRIGGER_GROUP  NVARCHAR2(200) NOT NULL, 
                PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
            );

            CREATE TABLE qrtz_fired_triggers 
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                ENTRY_ID NVARCHAR2(95) NOT NULL,
                TRIGGER_NAME NVARCHAR2(200) NOT NULL,
                TRIGGER_GROUP NVARCHAR2(200) NOT NULL,
                INSTANCE_NAME NVARCHAR2(200) NOT NULL,
                FIRED_TIME NUMBER(38) NOT NULL,
                SCHED_TIME NUMBER(38) NOT NULL,
                PRIORITY NUMBER(10) NOT NULL,
                STATE NVARCHAR2(16) NOT NULL,
                JOB_NAME NVARCHAR2(200) NULL,
                JOB_GROUP NVARCHAR2(200) NULL,
                IS_NONCONCURRENT NUMBER(1) NULL,
                REQUESTS_RECOVERY NUMBER(1) NULL,
                PRIMARY KEY (SCHED_NAME,ENTRY_ID)
            );

            CREATE TABLE qrtz_scheduler_state 
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                INSTANCE_NAME NVARCHAR2(200) NOT NULL,
                LAST_CHECKIN_TIME NUMBER(38) NOT NULL,
                CHECKIN_INTERVAL NUMBER(38) NOT NULL,
                PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
            );

            CREATE TABLE qrtz_locks
              (
                SCHED_NAME NVARCHAR2(120) NOT NULL,
                LOCK_NAME  NVARCHAR2(40) NOT NULL, 
                PRIMARY KEY (SCHED_NAME,LOCK_NAME)
            );

            create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
            create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);

            create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
            create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
            create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
            create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
            create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
            create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
            create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
            create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
            create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
            create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
            create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
            create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

            create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
            create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
            create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
            create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
            create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
            create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
          </sql>
    </changeSet>

</databaseChangeLog>